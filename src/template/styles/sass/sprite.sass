// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$arrow-right-name: 'arrow-right'
$arrow-right-x: 79px
$arrow-right-y: 50px
$arrow-right-offset-x: -79px
$arrow-right-offset-y: -50px
$arrow-right-width: 30px
$arrow-right-height: 9px
$arrow-right-total-width: 152px
$arrow-right-total-height: 146px
$arrow-right-image: '../../img/sprite.png'
$arrow-right: (79px, 50px, -79px, -50px, 30px, 9px, 152px, 146px, '../../img/sprite.png', 'arrow-right', )
$check-mark-name: 'check-mark'
$check-mark-x: 0px
$check-mark-y: 0px
$check-mark-offset-x: 0px
$check-mark-offset-y: 0px
$check-mark-width: 79px
$check-mark-height: 59px
$check-mark-total-width: 152px
$check-mark-total-height: 146px
$check-mark-image: '../../img/sprite.png'
$check-mark: (0px, 0px, 0px, 0px, 79px, 59px, 152px, 146px, '../../img/sprite.png', 'check-mark', )
$chevron-left-name: 'chevron-left'
$chevron-left-x: 129px
$chevron-left-y: 57px
$chevron-left-offset-x: -129px
$chevron-left-offset-y: -57px
$chevron-left-width: 19px
$chevron-left-height: 31px
$chevron-left-total-width: 152px
$chevron-left-total-height: 146px
$chevron-left-image: '../../img/sprite.png'
$chevron-left: (129px, 57px, -129px, -57px, 19px, 31px, 152px, 146px, '../../img/sprite.png', 'chevron-left', )
$chevron-right-name: 'chevron-right'
$chevron-right-x: 0px
$chevron-right-y: 115px
$chevron-right-offset-x: 0px
$chevron-right-offset-y: -115px
$chevron-right-width: 19px
$chevron-right-height: 31px
$chevron-right-total-width: 152px
$chevron-right-total-height: 146px
$chevron-right-image: '../../img/sprite.png'
$chevron-right: (0px, 115px, 0px, -115px, 19px, 31px, 152px, 146px, '../../img/sprite.png', 'chevron-right', )
$chevron-top-name: 'chevron-top'
$chevron-top-x: 0px
$chevron-top-y: 59px
$chevron-top-offset-x: 0px
$chevron-top-offset-y: -59px
$chevron-top-width: 38px
$chevron-top-height: 26px
$chevron-top-total-width: 152px
$chevron-top-total-height: 146px
$chevron-top-image: '../../img/sprite.png'
$chevron-top: (0px, 59px, 0px, -59px, 38px, 26px, 152px, 146px, '../../img/sprite.png', 'chevron-top', )
$plus-gradient-name: 'plus-gradient'
$plus-gradient-x: 30px
$plus-gradient-y: 85px
$plus-gradient-offset-x: -30px
$plus-gradient-offset-y: -85px
$plus-gradient-width: 27px
$plus-gradient-height: 27px
$plus-gradient-total-width: 152px
$plus-gradient-total-height: 146px
$plus-gradient-image: '../../img/sprite.png'
$plus-gradient: (30px, 85px, -30px, -85px, 27px, 27px, 152px, 146px, '../../img/sprite.png', 'plus-gradient', )
$plus-white-name: 'plus-white'
$plus-white-x: 79px
$plus-white-y: 0px
$plus-white-offset-x: -79px
$plus-white-offset-y: 0px
$plus-white-width: 50px
$plus-white-height: 50px
$plus-white-total-width: 152px
$plus-white-total-height: 146px
$plus-white-image: '../../img/sprite.png'
$plus-white: (79px, 0px, -79px, 0px, 50px, 50px, 152px, 146px, '../../img/sprite.png', 'plus-white', )
$security-blue-name: 'security-blue'
$security-blue-x: 129px
$security-blue-y: 29px
$security-blue-offset-x: -129px
$security-blue-offset-y: -29px
$security-blue-width: 22px
$security-blue-height: 28px
$security-blue-total-width: 152px
$security-blue-total-height: 146px
$security-blue-image: '../../img/sprite.png'
$security-blue: (129px, 29px, -129px, -29px, 22px, 28px, 152px, 146px, '../../img/sprite.png', 'security-blue', )
$security-gray-name: 'security-gray'
$security-gray-x: 129px
$security-gray-y: 0px
$security-gray-offset-x: -129px
$security-gray-offset-y: 0px
$security-gray-width: 23px
$security-gray-height: 29px
$security-gray-total-width: 152px
$security-gray-total-height: 146px
$security-gray-image: '../../img/sprite.png'
$security-gray: (129px, 0px, -129px, 0px, 23px, 29px, 152px, 146px, '../../img/sprite.png', 'security-gray', )
$telephone-name: 'telephone'
$telephone-x: 0px
$telephone-y: 85px
$telephone-offset-x: 0px
$telephone-offset-y: -85px
$telephone-width: 30px
$telephone-height: 30px
$telephone-total-width: 152px
$telephone-total-height: 146px
$telephone-image: '../../img/sprite.png'
$telephone: (0px, 85px, 0px, -85px, 30px, 30px, 152px, 146px, '../../img/sprite.png', 'telephone', )
$x-name: 'x'
$x-x: 129px
$x-y: 88px
$x-offset-x: -129px
$x-offset-y: -88px
$x-width: 13px
$x-height: 13px
$x-total-width: 152px
$x-total-height: 146px
$x-image: '../../img/sprite.png'
$x: (129px, 88px, -129px, -88px, 13px, 13px, 152px, 146px, '../../img/sprite.png', 'x', )
$spritesheet-width: 152px
$spritesheet-height: 146px
$spritesheet-image: '../../img/sprite.png'
$spritesheet-sprites: ($arrow-right, $check-mark, $chevron-left, $chevron-right, $chevron-top, $plus-gradient, $plus-white, $security-blue, $security-gray, $telephone, $x, )
$spritesheet: (152px, 146px, '../../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)


.icon-
  &arrow-right
    @include sprite($arrow-right)
  &check-mark
    @include sprite($check-mark)
  &chevron-left
    @include sprite($chevron-left)
  &chevron-right
    @include sprite($chevron-right)
  &chevron-top
    @include sprite($chevron-top)
  &plus-gradient
    @include sprite($plus-gradient)
  &plus-white
    @include sprite($plus-white)
  &security-blue
    @include sprite($security-blue)
  &security-gray
    @include sprite($security-gray)
  &telephone
    @include sprite($telephone)
  &x
    @include sprite($x)